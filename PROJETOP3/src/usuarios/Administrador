package usuarios;

import java.util.ArrayList;
import java.util.List;

public class Administrador {

	private List<Administrador> administrador = new ArrayList();

	private String loginadm, senhaadm, nomeDeAdm;
	private ArrayList<Administrador> amigos, pendentes;
	private ArrayList<String> recados;

	public Administrador(String loginadm, String senhaadm, String nomeDeadm) {
		this.loginadm = loginadm;
		this.senhaadm = senhaadm;
		this.nomeDeAdm = nomeDeadm;
		amigos = new ArrayList();
		pendentes = new ArrayList();
		recados = new ArrayList();
	}

	public String getLoginAdm() {

		return loginadm;
	}

	public void setNomeDeAdm(String nomeDeadm) {
		this.nomeDeAdm = nomeDeadm;
	}

	public void setSenhaAdm(String nomeDeadm) {
		this.senhaadm = nomeDeadm;
	}

	public String getNomeDeAdm() {

		return nomeDeAdm;
	}

	public String getSenhaAdm() {

		return senhaadm;
	}

	public int adicionar(Administrador u) {// Adicionar amigos
		if (this.pendentes.contains(u)) {// Se já existe um convite pendente de "u"
			this.amigos.add(u);
			u.amigos.add(this);
			pendentes.remove(u);
			u.pendentes.remove(this);
			return 1;// 1 corresponde à aceitação do pedido de amizade
		} else if (u.pendentes.contains(this)) {// Se "u" possui um convite do usuário
			return -1;// falha
		} else if (u.amigos.contains(this) && this.amigos.contains(u)) {// Se ambos são amigos
			return -1;// falha
		} else {
			u.pendentes.add(this);
		}
		return 0;// 0 corresponde ao envio do pedido, permanecendo como 'pendente'
	}

	public void adicionarRecado(String recado) {
		recados.add(recado);
	}

	public boolean limparRecados() {
		if (recados.size() == 0) {
			return false;
		} else {
			recados.clear();
			return true;
		}
	}

	@Override // Comparador de usuários utilizando equals com o login
	public boolean equals(Object o) {
		Administrador u = (Administrador) o;
		if (this.loginadm.equals(u.loginadm)) {
			return true;
		} else {
			return false;
		}
	}

	@Override
	public String toString() {
		return getLoginAdm() + "\n";
	}

	public String listaDeAmigos() {// Exibir amigos
		String list = "";
		for (Administrador u : amigos) {
			list += u.toString();
		}
		return list;
	}

	public String listaDePendentes() {// Exibir pendentes
		String list = "";
		for (Administrador u : pendentes) {
			list += u.toString();
		}
		return list;
	}

	public String listaRecados() {// Exibir pendentes
		String list = "";
		for (int i = 0; i < recados.size(); i++) {
			list += recados.get(i) + "\n";
		}
		return list;
	}

}
